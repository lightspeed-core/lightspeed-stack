@startuml classes
set namespaceSeparator none
class "AuthenticationConfiguration" as src.models.config.AuthenticationConfiguration {
  k8s_ca_cert_path : Optional[FilePath]
  k8s_cluster_api : Optional[AnyHttpUrl]
  module : str
  skip_tls_verification : bool
  check_authentication_model() -> Self
}
class "Configuration" as src.models.config.Configuration {
  authentication : Optional[AuthenticationConfiguration]
  customization : Optional[Customization]
  llama_stack
  mcp_servers : list[ModelContextProtocolServer]
  name : str
  service
  user_data_collection
  dump(filename: str) -> None
}
class "Customization" as src.models.config.Customization {
  disable_query_system_prompt : bool
  system_prompt : Optional[str]
  system_prompt_path : Optional[FilePath]
  check_customization_model() -> Self
}
class "DataCollectorConfiguration" as src.models.config.DataCollectorConfiguration {
  cleanup_after_send : bool
  collection_interval : Annotated
  connection_timeout : Annotated
  enabled : bool
  ingress_content_service_name : Optional[str]
  ingress_server_auth_token : Optional[str]
  ingress_server_url : Optional[str]
  check_data_collector_configuration() -> Self
}
class "LlamaStackConfiguration" as src.models.config.LlamaStackConfiguration {
  api_key : Optional[str]
  library_client_config_path : Optional[str]
  url : Optional[str]
  use_as_library_client : Optional[bool]
  check_llama_stack_model() -> Self
}
class "ModelContextProtocolServer" as src.models.config.ModelContextProtocolServer {
  name : str
  provider_id : str
  url : str
}
class "ServiceConfiguration" as src.models.config.ServiceConfiguration {
  access_log : bool
  auth_enabled : bool
  color_log : bool
  host : str
  port : int
  tls_config
  workers : int
  check_service_configuration() -> Self
}
class "TLSConfiguration" as src.models.config.TLSConfiguration {
  tls_certificate_path : Optional[FilePath]
  tls_key_password : Optional[FilePath]
  tls_key_path : Optional[FilePath]
  check_tls_configuration() -> Self
}
class "UserDataCollection" as src.models.config.UserDataCollection {
  data_collector
  feedback_enabled : bool
  feedback_storage : Optional[str]
  transcripts_enabled : bool
  transcripts_storage : Optional[str]
  check_storage_location_is_set_when_needed() -> Self
}
src.models.config.DataCollectorConfiguration --* src.models.config.UserDataCollection : data_collector
src.models.config.LlamaStackConfiguration --* src.models.config.Configuration : llama_stack
src.models.config.ServiceConfiguration --* src.models.config.Configuration : service
src.models.config.TLSConfiguration --* src.models.config.ServiceConfiguration : tls_config
src.models.config.UserDataCollection --* src.models.config.Configuration : user_data_collection
@enduml
