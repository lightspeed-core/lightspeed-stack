services:
  # Red Hat llama-stack distribution with FAISS
  llama-stack:
    build:
      context: .
      dockerfile: test.containerfile
    platform: linux/amd64
    container_name: llama-stack
    ports:
      - "8321:8321"  # Expose llama-stack on 8321 (adjust if needed)
    volumes:
      - ./run.yaml:/opt/app-root/run.yaml:Z
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_API_KEY=${AZURE_API_KEY}
      - BRAVE_SEARCH_API_KEY=${BRAVE_SEARCH_API_KEY:-}
      - TAVILY_SEARCH_API_KEY=${TAVILY_SEARCH_API_KEY:-}
      - RHAIIS_URL=${RHAIIS_URL}
      - RHAIIS_API_KEY=${RHAIIS_API_KEY}
      - RHAIIS_MODEL=${RHAIIS_MODEL}
      - LLAMA_STACK_LOGGING=all=debug # enable llama-stack debug log
    networks:
      - lightspeednet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8321/v1/health"]
      interval: 10s   # how often to run the check
      timeout: 5s    # how long to wait before considering it failed
      retries: 3      # how many times to retry before marking as unhealthy
      start_period: 15s # time to wait before starting checks

  lightspeed-stack:
    build:
      context: .
      dockerfile: Containerfile
    container_name: lightspeed-stack
    ports:
      - "8080:8080"
    volumes:
      - ./lightspeed-stack.yaml:/app-root/lightspeed-stack.yaml:Z
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_API_KEY=${AZURE_API_KEY}
    depends_on:
        llama-stack:
          condition: service_healthy
    networks:
      - lightspeednet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/liveness"]
      interval: 10s   # how often to run the check
      timeout: 5s    # how long to wait before considering it failed
      retries: 3      # how many times to retry before marking as unhealthy
      start_period: 5s # time to wait before starting checks

networks:
  lightspeednet:
    driver: bridge
